@model WebApplication1.Models.Check

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Master.cshtml";
}
@using (Html.BeginForm("Edit", "Checks",  FormMethod.Post, htmlAttributes: new { id = "submit_form" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-xs-12">
            <div class="box">

                <div class="text-center text-blue" style="border-style:solid;">
                    <h2>ویرایش چک</h2>
                </div>
                <div class="form-horizontal" style="margin-left:400px">
                    <p class="danger text text-danger" style="margin-bottom:2px;margin-right:20px;margin-top:5px">
                        @TempData["ErrorDatee"]
                    </p>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.MarketerUserId, "مشتری", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("MarketerUserId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MarketerUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CheckStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.CheckStatus, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CheckStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BankId, "بانک", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("BankId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input class="form-control" id="Date" name="Date" value="@WebApplication1.Areas.Admin.Utility.DateChanger.ToPersianDateString(Model.Date)  " />
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CheckCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CheckCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CheckCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="margin-right:20px;">
                        <a class="btn btn-warning" href="/Admin/Checks/Index"> بازگشت</a>
                        <input type="button" onclick="Register()" value="ثبت " class="btn btn-success" />

                    </div>
                </div>
            </div>
    </div>
        </div>
    
}
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="background-color:rgba(186, 26, 26, 0.65)">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">خطا</h4>
            </div>
            <div class="modal-body">
                <p id="txtError"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">بازگشت</button>
            </div>
        </div>
    </div>
</div>
<button id="Errorbutton" type="button" style="display:none" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Small Modal</button>
<script>
    $(document).ready(function () {
        $("#Date").datepicker();

    });

    function Register() {
        if ($("#Date").val() == "") {
            $("#txtError").text("تاریخ خالی است ");
            $("#Errorbutton").click();
            return;
        }
        else if ($("#Price").val() == "") {
            $("#txtError").text("قیمت خالی است ");
            $("#Errorbutton").click();
            return;
        }
        else {
            while (Price.value.indexOf(',') != -1) {
                Price.value = Price.value.replace(',', '');
            }
            submit_form.submit();

        }


    }

</script>